name: Build and deploy Node.js app to Azure Web App - SalesInquiryGroup

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          # Verify critical dependencies are installed
          ls -la node_modules/react || npm install react react-dom
          ls -la node_modules/wouter || npm install wouter
          ls -la node_modules/lucide-react || npm install lucide-react
          ls -la node_modules/react-icons || npm install react-icons
          ls -la node_modules/@tanstack/react-query || npm install @tanstack/react-query
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production
          NODE_OPTIONS: "--max_old_space_size=4096"

      - name: Create deployment package
        run: |
          # Create a production-ready package
          mkdir -p deployment
          
          # Copy built files
          cp -r dist deployment/
          cp web.config deployment/
          
          # Create a minimal package.json with start script and runtime dependencies
          cat > deployment/package.json << EOF
          {
            "name": "sales-inquiry-azure",
            "version": "1.0.0",
            "type": "module",
            "engines": {
              "node": ">=20.0.0"
            },
            "scripts": {
              "start": "node dist/azure-entry.js"
            },
            "dependencies": {
              "@tanstack/react-query": "^5.76.1",
              "express": "^4.18.2",
              "lucide-react": "^0.511.0",
              "react": "^18.2.0",
              "react-dom": "^18.2.0",
              "react-icons": "^5.5.0",
              "wouter": "^3.7.0"
            }
          }
          EOF
          
          # Install only the essential dependencies
          cd deployment
          npm install --no-package-lock --production
          
          # Create a startup script for Azure
          echo "console.log('Starting application...');" > startup.js
          echo "import('./dist/azure-entry.js').catch(err => console.error('Failed to start:', err));" >> startup.js
          
          # Create a basic .env file
          echo "NODE_ENV=production" > .env
          echo "PORT=8080" >> .env
          
          # Zip everything for deployment
          zip -r ../release.zip ./*

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip
          retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_886E565E15F54F64825AFC8382A0E7EA }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_D814736B79FA4FBC95BEDB87DF16ECCF }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_51420C1A3F184E88ADC3E862DB86A4EF }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'SalesInquiryGroup'
          slot-name: 'Production'
          package: .
          
      - name: Set App Settings
        uses: azure/appservice-settings@v1
        with:
          app-name: 'SalesInquiryGroup'
          app-settings-json: |
            [
              {
                "name": "NODE_ENV",
                "value": "production"
              },
              {
                "name": "PORT",
                "value": "8080"
              },
              {
                "name": "WEBSITE_NODE_DEFAULT_VERSION",
                "value": "~20"
              },
              {
                "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
                "value": "false"
              },
              {
                "name": "WEBSITE_RUN_FROM_PACKAGE",
                "value": "0"
              }
            ]
